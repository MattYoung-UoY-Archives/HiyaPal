module SkelHiyapal where

-- Haskell module generated by the BNF converter

import AbsHiyapal
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transVarId :: VarId -> Result
transVarId x = case x of
  VarId string -> failure x
transBoolean :: Boolean -> Result
transBoolean x = case x of
  Boolean string -> failure x
transExp :: Exp -> Result
transExp x = case x of
  SinBExpr boolexp -> failure x
  BExpr boolexp exp -> failure x
  SinIExpr intexp -> failure x
  IExpr intexp exp -> failure x
transBoolExp :: BoolExp -> Result
transBoolExp x = case x of
  Val boolean -> failure x
  BVar varid -> failure x
transIntExp :: IntExp -> Result
transIntExp x = case x of
  Div intexp1 intexp2 -> failure x
  Sub intexp1 intexp2 -> failure x
  Add intexp1 intexp2 -> failure x
  Mul intexp1 intexp2 -> failure x
  Neg intexp -> failure x
  Nmb integer -> failure x
  IVar varid -> failure x

